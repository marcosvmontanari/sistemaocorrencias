console.log("üîπ Script listar_ocorrencias.js carregado!");

export async function init() {
    console.log("üî∏ Inicializando m√≥dulo listar_ocorrencias.js");

    await carregarOcorrencias();
}

// üî∏ Carrega a lista de ocorr√™ncias
async function carregarOcorrencias() {
    try {
        const resposta = await fetch(`${BASE_URL}/ocorrencias`);
        if (!resposta.ok) throw new Error("Erro ao buscar ocorr√™ncias");

        const dados = await resposta.json();

        // A resposta vem { ocorrencias: [...] }, ent√£o acessamos dados.ocorrencias
        const ocorrencias = dados.ocorrencias;

        if (!Array.isArray(ocorrencias)) {
            console.error("Resposta inesperada:", dados);
            return;
        }

        ocorrencias.forEach(ocorrencia => {
            preencherTabelaOcorrencias(ocorrencia);
        });

    } catch (error) {
        console.error("Erro ao carregar ocorr√™ncias:", error);
    }
}

// üî∏ Preenche a tabela de ocorr√™ncias
function preencherTabelaOcorrencias(ocorrencias) {
    const tbody = document.querySelector("#tabelaOcorrencias tbody");
    tbody.innerHTML = "";

    ocorrencias.forEach(ocorrencia => {
        const tr = document.createElement("tr");

        tr.innerHTML = `
            <td>${ocorrencia.id}</td>
            <td>${ocorrencia.aluno_nome}</td>
            <td>${ocorrencia.infracao_tipo}</td>
            <td>${ocorrencia.descricao}</td>
            <td>${ocorrencia.local}</td>
            <td>${ocorrencia.servidor_nome}</td>
            <td>${formatarDataHora(ocorrencia.data_hora)}</td>
            <td>${ocorrencia.imagem ? `<a href="${BASE_URL}/uploads/${ocorrencia.imagem}" target="_blank">Ver</a>` : '-'}</td>
            <td>
                <button class="btn btn-sm btn-primary" onclick="abrirModalEdicao(${ocorrencia.id}, '${ocorrencia.descricao}', '${ocorrencia.local}')">Editar</button>
                <button class="btn btn-sm btn-danger" onclick="confirmarExclusao(${ocorrencia.id})">Excluir</button>
            </td>
        `;

        tbody.appendChild(tr);
    });
}

// üî∏ Formata a data/hora no padr√£o brasileiro
function formatarDataHora(dataHora) {
    const data = new Date(dataHora);
    return data.toLocaleString("pt-BR");
}

// üî∏ Abre o modal de edi√ß√£o
window.abrirModalEdicao = (id, descricao, local) => {
    document.getElementById("editarOcorrenciaId").value = id;
    document.getElementById("editarDescricao").value = descricao;
    document.getElementById("editarLocal").value = local;

    const modal = new bootstrap.Modal(document.getElementById("modalEditarOcorrencia"));
    modal.show();
}

// üî∏ Salva as altera√ß√µes
window.salvarEdicaoOcorrencia = async () => {
    const id = document.getElementById("editarOcorrenciaId").value;
    const descricao = document.getElementById("editarDescricao").value.trim();
    const local = document.getElementById("editarLocal").value.trim();

    if (!descricao || !local) {
        Swal.fire("Preencha todos os campos!", "", "warning");
        return;
    }

    try {
        const resposta = await fetch(`${BASE_URL}/ocorrencias/${id}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ descricao, local })
        });

        if (resposta.ok) {
            Swal.fire("Sucesso!", "Ocorr√™ncia atualizada.", "success");
            document.querySelector("#modalEditarOcorrencia .btn-secondary").click(); // Fecha o modal
            carregarOcorrencias();
        } else {
            Swal.fire("Erro!", "Falha ao atualizar ocorr√™ncia.", "error");
        }
    } catch (error) {
        console.error("‚ùå Erro ao salvar edi√ß√£o:", error);
        Swal.fire("Erro!", "Erro de conex√£o.", "error");
    }
}

// üî∏ Confirma e exclui ocorr√™ncia
window.confirmarExclusao = (id) => {
    Swal.fire({
        title: "Tem certeza?",
        text: "Esta a√ß√£o n√£o pode ser desfeita!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonText: "Sim, excluir!",
        cancelButtonText: "Cancelar"
    }).then(async (result) => {
        if (result.isConfirmed) {
            await excluirOcorrencia(id);
        }
    });
}

async function excluirOcorrencia(id) {
    try {
        const resposta = await fetch(`${BASE_URL}/ocorrencias/${id}`, {
            method: "DELETE"
        });

        if (resposta.ok) {
            Swal.fire("Exclu√≠do!", "Ocorr√™ncia removida.", "success");
            carregarOcorrencias();
        } else {
            Swal.fire("Erro!", "Falha ao excluir ocorr√™ncia.", "error");
        }
    } catch (error) {
        console.error("‚ùå Erro ao excluir ocorr√™ncia:", error);
        Swal.fire("Erro!", "Erro de conex√£o.", "error");
    }
}
