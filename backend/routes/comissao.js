const express = require("express");
const router = express.Router();
const ComissaoModel = require("../models/ComissaoModel");

/**
 * üîπ Rota para listar todos os alunos encaminhados para a comiss√£o
 * (aqueles que t√™m pelo menos uma ocorr√™ncia GRAV√çSSIMA)
 */
router.get("/alunos", async (req, res) => {
    try {
        const alunos = await ComissaoModel.listarAlunosEncaminhadosParaComissao();
        res.status(200).json(alunos);
    } catch (error) {
        console.error("Erro ao listar alunos para comiss√£o:", error);
        res.status(500).json({ mensagem: "Erro ao listar alunos para comiss√£o." });
    }
});

/**
 * üîπ Rota para listar o hist√≥rico completo de ocorr√™ncias de um aluno espec√≠fico
 */
router.get("/ocorrencias/:alunoId", async (req, res) => {
    const { alunoId } = req.params;

    try {
        const ocorrencias = await ComissaoModel.listarOcorrenciasDoAluno(alunoId);
        res.status(200).json(ocorrencias);
    } catch (error) {
        console.error("Erro ao listar ocorr√™ncias do aluno:", error);
        res.status(500).json({ mensagem: "Erro ao listar ocorr√™ncias do aluno." });
    }
});

/**
 * üîπ Rota para salvar um feedback da comiss√£o disciplinar sobre uma ocorr√™ncia
 */
router.put("/feedback/:ocorrenciaId", async (req, res) => {
    const { ocorrenciaId } = req.params;
    const { feedback } = req.body;

    try {
        await ComissaoModel.salvarFeedbackComissao(ocorrenciaId, feedback);
        res.status(200).json({ mensagem: "Feedback salvo com sucesso." });
    } catch (error) {
        console.error("Erro ao salvar feedback da comiss√£o:", error);
        res.status(500).json({ mensagem: "Erro ao salvar feedback da comiss√£o." });
    }
});

module.exports = router;
